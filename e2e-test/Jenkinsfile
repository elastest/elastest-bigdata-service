def elastest_url = ''
node('et_in_et'){
        elastest(tss: ['EUS'], surefireReportsPattern: '**/target/surefire-reports/TEST-*.xml', project: 'ETinET', sut: 11) {        
        stage ('docker container')
	    try {
            	def mycontainer = docker.image('elastest/ci-docker-e2e-compose-py:latest')
            	mycontainer.pull()
            	mycontainer.inside("-u jenkins -v /var/run/docker.sock:/var/run/docker.sock:rw -v /dev/shm:/dev/shm")
					{
					sh '/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf &'
					sh "env | sort"    
					} 

         stage ('prepare test')
	    try {
                git 'https://github.com/elastest/elastest-bigdata-service.git'
                elastest_url = "http://" + env.SHARED_ELASTEST_USER +":"+ env.SHARED_ELASTEST_PASS+"@"+env.ET_SUT_HOST+":"+env.ET_SUT_PORT
            	echo "url:" + elastest_url
		} catch(e) {
                           echo 'Err: ' + e.toString()
	    		   }  
	 stage ('Run first test as a TJob')
             try {
                sh "cd e2e-test;python e2etest.py ${elastest_url}"
                 } catch(e) {
        	             echo 'Err: ' + e.toString()
                            }    
         stage ('Run same test through selenium')
                    try {
                        sh "cd e2e-test;python seleniume2e.py ${elastest_url}"
                    } catch(e) {
         	               echo 'Err: ' + e.toString()
                	       }     
	    } catch(e) {
                	    echo 'Err: ' + e.toString()
                    	   }   
	}
}
