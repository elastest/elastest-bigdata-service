node {
    @Library('ciElastestConnect@fullyconfigurable') _
    elastest_lib.setVersion('dev')
    //initialization of the context for the library
    elastest_lib.setContext(this)
    elastest_lib.setMode('experimental-lite')
    elastest_lib.setOptionals('-sa='+env.SA)
    elastest_lib.setShared( env.SHARED_ELASTEST == 'true')
    //elastest_lib.setTestLink(true)
    elastest_lib.setAuthenticatedElastest(true)
    //initialization of the runnable object to access elastest methods inside the pipeline
    def elastest= elastest_lib.getElastestMethods()
    def elastest_network = env.NETWORK

    //definition of nodes is managed by the library. Just declare the steps of your pipeline
    //inside the elastest_lib.pipeline({...})
    elastest_lib.pipeline({
    
    	try {
        
    	    stage ('docker container')
    	        def mycontainer = elastest.ctx.docker.image('elastest/ci-docker-e2e:latest')
    	        mycontainer.pull()
    	        mycontainer.inside("-u jenkins -v /var/run/docker.sock:/var/run/docker.sock:rw -v /dev/shm:/dev/shm")  {
    	            sh '/usr/bin/supervisord -c /etc/supervisor/conf.d/supervisord.conf &'
    	          
    	            stage ('prepare')
    	                git 'https://github.com/elastest/elastest-bigdata-service.git'
    	                elastest.connect2ElastestNetwork()
    	                def elastestURL = elastest.getEtmUrl()
    	                
    	            stage ("E2E tests")
    	                try {
        	    sh "cd e2e-test;python e2etest.py ${elastestURL}"
    	                } catch(e) {
    	                   // Using etm because is experimental-lite
    	                    sh "echo kimon"
    						throw e
    	                } finally {
    	                    step([$class: 'JUnitResultArchiver', testDataPublishers: [[$class: 'AttachmentPublisher']], testResults: '**/target/surefire-reports/TEST-*.xml'])
    	                }
    	        }
    	} catch (err) {
            echo 'Error!!! Send email to the people responsible for the builds.'
            throw err
        }	       
      })  
}
